#![no_std]
use rt::Vector;


#[link_section = ".vector_table.irqs"]
#[used]
pub static mut IRQS: [Vector; 91] = [
    Vector { handler: DefaultIrqHandler }, // WWDG (0)
    Vector { handler: DefaultIrqHandler }, // PVD (1)
    Vector { handler: DefaultIrqHandler }, // TAMP_STAMP (2)
    Vector { handler: DefaultIrqHandler }, // RTC_WKUP (3)
    Vector { handler: DefaultIrqHandler }, // FLASH (4)
    Vector { handler: DefaultIrqHandler }, // RCC (5)
    Vector { handler: DefaultIrqHandler }, // EXTI0 (6)
    Vector { handler: DefaultIrqHandler }, // EXTI1 (7)
    Vector { handler: DefaultIrqHandler }, // EXTI2 (8)
    Vector { handler: DefaultIrqHandler }, // EXTI3 (9)
    Vector { handler: DefaultIrqHandler }, // EXTI4 (10)
    Vector { handler: DefaultIrqHandler }, // DMA1_Stream0 (11)
    Vector { handler: DefaultIrqHandler }, // DMA1_Stream1 (12)
    Vector { handler: DefaultIrqHandler }, // DMA1_Stream2 (13)
    Vector { handler: DefaultIrqHandler }, // DMA1_Stream3 (14)
    Vector { handler: DefaultIrqHandler }, // DMA1_Stream4 (15)
    Vector { handler: DefaultIrqHandler }, // DMA1_Stream5 (16)
    Vector { handler: DefaultIrqHandler }, // DMA1_Stream6 (17)
    Vector { handler: DefaultIrqHandler }, // ADC (18)
    Vector { handler: DefaultIrqHandler }, // CAN1_TX (19)
    Vector { handler: DefaultIrqHandler }, // CAN1_RX0 (20)
    Vector { handler: DefaultIrqHandler }, // CAN1_RX1 (21)
    Vector { handler: DefaultIrqHandler }, // CAN1_SCE (22)
    Vector { handler: DefaultIrqHandler }, // EXTI9_5 (23)
    Vector { handler: DefaultIrqHandler }, // TIM1_BRK_TIM9 (24)
    Vector { handler: DefaultIrqHandler }, // TIM1_UP_TIM10 (25)
    Vector { handler: DefaultIrqHandler }, // TIM1_TRG_COM_TIM11 (26)
    Vector { handler: DefaultIrqHandler }, // TIM1_CC (27)
    Vector { handler: DefaultIrqHandler }, // TIM2 (28)
    Vector { handler: DefaultIrqHandler }, // TIM3 (29)
    Vector { handler: DefaultIrqHandler }, // TIM4 (30)
    Vector { handler: DefaultIrqHandler }, // I2C1_EV (31)
    Vector { handler: DefaultIrqHandler }, // I2C1_ER (32)
    Vector { handler: DefaultIrqHandler }, // I2C2_EV (33)
    Vector { handler: DefaultIrqHandler }, // I2C2_ER (34)
    Vector { handler: DefaultIrqHandler }, // SPI1 (35)
    Vector { handler: DefaultIrqHandler }, // SPI2 (36)
    Vector { handler: DefaultIrqHandler }, // USART1 (37)
    Vector { handler: DefaultIrqHandler }, // USART2 (38)
    Vector { handler: DefaultIrqHandler }, // USART3 (39)
    Vector { handler: DefaultIrqHandler }, // EXTI15_10 (40)
    Vector { handler: DefaultIrqHandler }, // RTC_Alarm (41)
    Vector { handler: DefaultIrqHandler }, // OTG_FS_WKUP (42)
    Vector { handler: DefaultIrqHandler }, // TIM8_BRK_TIM12 (43)
    Vector { handler: DefaultIrqHandler }, // TIM8_UP_TIM13 (44)
    Vector { handler: DefaultIrqHandler }, // TIM8_TRG_COM_TIM14 (45)
    Vector { handler: DefaultIrqHandler }, // TIM8_CC (46)
    Vector { handler: DefaultIrqHandler }, // DMA1_Stream7 (47)
    Vector { handler: DefaultIrqHandler }, // FMC (48)
    Vector { handler: DefaultIrqHandler }, // SDIO (49)
    Vector { handler: DefaultIrqHandler }, // TIM5 (50)
    Vector { handler: DefaultIrqHandler }, // SPI3 (51)
    Vector { handler: DefaultIrqHandler }, // UART4 (52)
    Vector { handler: DefaultIrqHandler }, // UART5 (53)
    Vector { handler: DefaultIrqHandler }, // TIM6_DAC (54)
    Vector { handler: DefaultIrqHandler }, // TIM7 (55)
    Vector { handler: DefaultIrqHandler }, // DMA2_Stream0 (56)
    Vector { handler: DefaultIrqHandler }, // DMA2_Stream1 (57)
    Vector { handler: DefaultIrqHandler }, // DMA2_Stream2 (58)
    Vector { handler: DefaultIrqHandler }, // DMA2_Stream3 (59)
    Vector { handler: DefaultIrqHandler }, // DMA2_Stream4 (60)
    Vector { handler: DefaultIrqHandler }, // ETH (61)
    Vector { handler: DefaultIrqHandler }, // ETH_WKUP (62)
    Vector { handler: DefaultIrqHandler }, // CAN2_TX (63)
    Vector { handler: DefaultIrqHandler }, // CAN2_RX0 (64)
    Vector { handler: DefaultIrqHandler }, // CAN2_RX1 (65)
    Vector { handler: DefaultIrqHandler }, // CAN2_SCE (66)
    Vector { handler: DefaultIrqHandler }, // OTG_FS (67)
    Vector { handler: DefaultIrqHandler }, // DMA2_Stream5 (68)
    Vector { handler: DefaultIrqHandler }, // DMA2_Stream6 (69)
    Vector { handler: DefaultIrqHandler }, // DMA2_Stream7 (70)
    Vector { handler: DefaultIrqHandler }, // USART6 (71)
    Vector { handler: DefaultIrqHandler }, // I2C3_EV (72)
    Vector { handler: DefaultIrqHandler }, // I2C3_ER (73)
    Vector { handler: DefaultIrqHandler }, // OTG_HS_EP1_OUT (74)
    Vector { handler: DefaultIrqHandler }, // OTG_HS_EP1_IN (75)
    Vector { handler: DefaultIrqHandler }, // OTG_HS_WKUP (76)
    Vector { handler: DefaultIrqHandler }, // OTG_HS (77)
    Vector { handler: DefaultIrqHandler }, // DCMI (78)
    Vector { handler: DefaultIrqHandler }, // CRYP (79)
    Vector { handler: DefaultIrqHandler }, // HASH_RNG (80)
    Vector { handler: DefaultIrqHandler }, // FPU (81)
    Vector { handler: DefaultIrqHandler }, // USART7 (82)
    Vector { handler: DefaultIrqHandler }, // USART8 (83)
    Vector { handler: DefaultIrqHandler }, // SPI4 (84)
    Vector { handler: DefaultIrqHandler }, // SPI5 (85)
    Vector { handler: DefaultIrqHandler }, // SPI6 (86)
    Vector { handler: DefaultIrqHandler }, // SAI1 (87)
    Vector { handler: DefaultIrqHandler }, // LCD-TFT (88)
    Vector { handler: DefaultIrqHandler }, // LCD-TFT (89)
    Vector { handler: DefaultIrqHandler }, // DMA2D(90)
];


#[no_mangle]
pub extern "C" fn DefaultIrqHandler() {
    loop {}
}